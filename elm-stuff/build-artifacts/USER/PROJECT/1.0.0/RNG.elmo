Elm.RNG = Elm.RNG || {};
Elm.RNG.make = function (_elm) {
   "use strict";
   _elm.RNG = _elm.RNG || {};
   if (_elm.RNG.values)
   return _elm.RNG.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "RNG",
   $Basics = Elm.Basics.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var getDSum = function (s) {
      return A2($Basics._op["%"],
      s.hRandomAdd + s.hRandomSub,
      256);
   };
   var rngStep = F2(function (carry,
   s) {
      return function () {
         var cycle$$ = A2($Basics._op["%"],
         s.cycle + 70224,
         256);
         var rDiv$$ = A2($Basics._op["%"],
         s.rDiv + ((s.cycle + 70224) / 256 | 0),
         256);
         var cycle$ = s.cycle + 44;
         var rDiv$ = _U.cmp(cycle$,
         256) > -1 ? A2($Basics._op["%"],
         s.rDiv + 1,
         256) : s.rDiv;
         var hRandomAdd$ = s.hRandomAdd + s.rDiv + carry;
         var carry$ = _U.cmp(hRandomAdd$,
         256) > -1 ? 1 : 0;
         var hRandomSub$ = s.hRandomSub - rDiv$ - carry$;
         return {_: {}
                ,cycle: cycle$$
                ,hRandomAdd: A2($Basics._op["%"],
                hRandomAdd$,
                256)
                ,hRandomSub: A2($Basics._op["%"],
                hRandomSub$,
                256)
                ,rDiv: rDiv$$};
      }();
   });
   var rngState = F4(function (r,
   c,
   a,
   s) {
      return {_: {}
             ,cycle: c
             ,hRandomAdd: a
             ,hRandomSub: s
             ,rDiv: r};
   });
   var RNGState = F4(function (a,
   b,
   c,
   d) {
      return {_: {}
             ,cycle: b
             ,hRandomAdd: c
             ,hRandomSub: d
             ,rDiv: a};
   });
   _elm.RNG.values = {_op: _op
                     ,RNGState: RNGState
                     ,rngState: rngState
                     ,rngStep: rngStep
                     ,getDSum: getDSum};
   return _elm.RNG.values;
};